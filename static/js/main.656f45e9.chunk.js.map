{"version":3,"sources":["components/Form/form.module.scss","App.module.scss","components/Form/Form.js","components/TextResult/TextResult.js","components/Table/Table.js","components/Chart/Chart.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","displayErrors","error","shown","icons","fadein","fadeinActive","accentColor","App","resultWrapper","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","_this$state","state","name","date","isNameValid","setState","showError","isDateValid","handleOnSubmit","clearInputs","elId","msg","errorEl","document","querySelector","classList","add","concat","styles","innerHTML","setTimeout","remove","match","dateArr","split","month","parseInt","day","console","log","type","defineProperty","target","value","getElementById","_this2","_this$state2","react_default","a","createElement","onSubmit","noValidate","className","htmlFor","react_fontawesome_index_es","icon","faUser","id","onChange","required","faBirthdayCake","placeholder","React","Component","textResult","currentPerson","sign","Fragment","signIcon","setSignIcon","Table","table","listOfPersons","PieChart","personsObj","persons","signsObj","data","arrOfSigns","map","currentValue","forEach","push","index_esm","chartType","footer","style","footerStyle","href","textAlign","person","checkZodiac","uuid","str","zodiac_sign","Date","getMonth","key","components_Form_Form","TextResult","length","components_Table_Table","Chart","Footer","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.656f45e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayErrors\":\"form_displayErrors__3prx-\",\"error\":\"form_error__3rkbT\",\"shown\":\"form_shown__3EWN9\",\"icons\":\"form_icons__1xgab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fadein\":\"App_fadein__1a5ua\",\"fadeinActive\":\"App_fadeinActive__1If1X\",\"accentColor\":\"App_accentColor__IvDZ4\",\"App\":\"App_App__1-bzM\",\"resultWrapper\":\"App_resultWrapper__3Mrzt\"};","import React from 'react';\r\nimport styles from './form.module.scss';\r\nimport '@fortawesome/fontawesome-svg-core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBirthdayCake, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: '',\r\n            name: '',\r\n            isDateValid: true,\r\n            isNameValid: true\r\n        };\r\n    }\r\n\r\n    isNameValid(name) {\r\n        const nameRegex = /^[a-zA-Z ]{3,30}$/;\r\n        return name.match(nameRegex);\r\n    }\r\n\r\n    // input '02/10'\r\n    isDateValid(date) {\r\n        const dateArr = date.split('/'); // [\"02\", \"10\"]\r\n        const dayAndMonthRegex = /^\\d{2}\\/\\d{2}$/;\r\n        const month = parseInt(dateArr[0], 10);\r\n        const day = parseInt(dateArr[1], 10);\r\n\r\n        console.log(month);\r\n        if ( date.match(dayAndMonthRegex) ) {\r\n            if (month >= 1 && month <= 12) {\r\n                if ( month === 2) {\r\n                    return day >= 1 && day <= 29;\r\n                } else {\r\n                    return day >= 1 && day <= 31;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { name, date } = this.state;\r\n\r\n        if ( name === '' || date === '') {\r\n            this.setState({ isNameValid: false, isDateValid: false });\r\n            return;\r\n        }\r\n\r\n        if( !this.isNameValid(name) ) {\r\n            this.setState({ isNameValid: false });\r\n            this.showError('#nameError', '<span>😐</span> Error: Name should contain only letters and minimum three characters');\r\n            return;\r\n        }\r\n        else if( !this.isDateValid(date) ) {\r\n            this.setState({ isDateValid: false });\r\n            this.showError('#dateError', '<span>😐</span> Error: Enter valid date in MM/DD format');\r\n            return;\r\n        }\r\n        else {\r\n            this.props.handleOnSubmit(name, date);\r\n            this.setState({ date: '', name: '', isDateValid: true, isNameValid: true });\r\n        }\r\n\r\n        this.clearInputs();\r\n    }\r\n\r\n    onChange(type, event) {\r\n        this.setState({ [type]: event.target.value });\r\n    }\r\n\r\n    showError = (elId, msg) => {\r\n        if (elId) {\r\n            const errorEl = document.querySelector(elId);\r\n            errorEl.classList.add(`${styles.shown}`);\r\n            errorEl.innerHTML = msg;\r\n\r\n            setTimeout(() => {\r\n                errorEl.classList.remove(`${styles.shown}`);\r\n            }, 4000);\r\n        }\r\n    }\r\n\r\n    clearInputs() {\r\n        document.getElementById('name').value = '';\r\n        document.getElementById('date').value = '';\r\n    }\r\n\r\n    render() {\r\n        const { date, name, isDateValid, isNameValid } = this.state;\r\n\r\n    return (\r\n        <form onSubmit={this.handleSubmit}\r\n              noValidate\r\n              className={ !isDateValid && !isNameValid ? styles.displayErrors : '' }\r\n              >\r\n              <label htmlFor=\"name\">Name<sup>*</sup> </label>\r\n              <span className={styles.icons}>\r\n                  <FontAwesomeIcon icon={faUser} />\r\n              </span>\r\n              <input id=\"name\"\r\n                     type=\"text\"\r\n                     name=\"name\"\r\n                     value={name}\r\n                     onChange={event => this.onChange('name', event)}\r\n                     required />\r\n                     <small className={styles.error} id=\"nameError\"></small>\r\n                     <br/>\r\n            <label htmlFor=\"date\">Month and Day<sup>*</sup> </label>\r\n            <span className={styles.icons}>\r\n                <FontAwesomeIcon icon={faBirthdayCake} />\r\n            </span>\r\n            <input id=\"date\"\r\n                   type=\"text\"\r\n                   name=\"date\"\r\n                   value={date}\r\n                   onChange={event => this.onChange('date', event)}\r\n                   placeholder=\"MM/DD\"\r\n                   required />\r\n                   <small className={styles.error} id=\"dateError\"></small>\r\n                   <br/>\r\n            <input type=\"submit\" />\r\n        </form>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../App.module.scss';\r\n\r\nconst textResult = (props) => {\r\n    const {currentPerson} = props;\r\n\r\n    if (!currentPerson) {\r\n        return null;\r\n    }\r\n\r\n    const {sign, name} = currentPerson;\r\n\r\n    const setSignIcon = (sign) => {\r\n        let signIcon = '';\r\n\r\n        switch (sign) {\r\n            case 'Sagittarius':\r\n                signIcon = '\\u2650';\r\n                break;\r\n            case 'Capricorn':\r\n                signIcon = '\\u2651';\r\n                break;\r\n            case 'Aquarius':\r\n                signIcon = '\\u2652';\r\n                break;\r\n            case 'Pisces':\r\n                signIcon = '\\u2653';\r\n                break;\r\n            case 'Aries':\r\n                signIcon = '\\u2648';\r\n                break;\r\n            case 'Taurus':\r\n                signIcon = '\\u2649';\r\n                break;\r\n            case 'Gemini':\r\n                signIcon = '\\u264A';\r\n                break;\r\n            case 'Cancer':\r\n                signIcon = '\\u264B';\r\n                break;\r\n            case 'Leo':\r\n                signIcon = '\\u264C';\r\n                break;\r\n            case 'Virgo':\r\n                signIcon = '\\u264D';\r\n                break;\r\n            case 'Libra':\r\n                signIcon = '\\u264E';\r\n                break;\r\n            case 'Scorpio':\r\n                signIcon = '\\u264F';\r\n                break;\r\n            default: signIcon = '';\r\n\r\n        }\r\n\r\n        return signIcon;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p>The zodiac for <strong className={styles.accentColor}>{name}\r\n                </strong> is <strong>{sign}</strong>\r\n                <span> {setSignIcon(sign)}</span>\r\n            </p>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default textResult;\r\n\r\ntextResult.propTypes = {\r\n    name: PropTypes.string,\r\n    sign: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport styles from './table.scss';\r\n\r\nconst Table = (props) => {\r\n  return (\r\n      <div>\r\n          <h2>All results</h2>\r\n          <table className={styles.table}>\r\n              <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Sign</th>\r\n                    <th>Date</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n                {props.listOfPersons}\r\n              </tbody>\r\n          </table>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nclass PieChart extends React.Component {\r\n\r\n    render() {\r\n        const personsObj = this.props.persons;\r\n        const signsObj = {};\r\n        const data = [[\"Zodiac\", \"Amount\"]];\r\n\r\n        // create array of all signs, ex. [\"Pisces\", \"Capricorn\", \"Leo\"]\r\n        const arrOfSigns = personsObj\r\n            .map( currentValue => {\r\n                return currentValue.sign;\r\n            });\r\n\r\n        // create hash table with Sign as a KEY and its Amount as VALUE and count each sign amount\r\n        // ex. {Pisces: 3, Capricorn: 1, Leo: 1}\r\n        arrOfSigns.forEach( sign => {\r\n            signsObj[sign] ? signsObj[sign]++ : signsObj[sign] = 1;\r\n        });\r\n\r\n        // update data arr with each sign and its amount\r\n        for (let sign in signsObj) {\r\n            if ( sign !== '' ) {\r\n                data.push([sign, signsObj[sign] ]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Chart\r\n                chartType=\"PieChart\"\r\n                data={data}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default PieChart;\r\n","import React from 'react';\n\nconst footer = (props) => {\n  return (\n      <footer style={footerStyle}>\n          <small>\n              by <a href=\"http://annakarlovskaya.com/\" target=\"blank\">Anna Karlovskaya</a>, 2018\n          </small>\n      </footer>\n  );\n}\n\nexport default footer;\n\nconst footerStyle = {\n    textAlign: 'center'\n}\n","import React, { Component } from 'react';\r\nimport styles from './App.module.scss';\r\nimport Form from './components/Form/Form';\r\nimport TextResult from './components/TextResult/TextResult';\r\nimport Table from './components/Table/Table';\r\nimport PieChart from './components/Chart/Chart';\r\nimport Footer from './components/Footer/Footer';\r\nimport uuid from 'uuid';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        person: {\r\n            id: null,\r\n            sign: ''\r\n        },\r\n        persons: [],\r\n        displayErrors: false\r\n    }\r\n\r\n    onSubmit = (name, date) => {\r\n        const sign = this.checkZodiac(date);\r\n        const person = {id: uuid(), date, name, sign};\r\n\r\n        this.setState({\r\n            person,\r\n            persons: this.state.persons.concat(person),\r\n            displayErrors: false\r\n        });\r\n    }\r\n\r\n    checkZodiac = (str) => {\r\n      let zodiac_sign = '';\r\n      const date = str.split('/');\r\n      const months = [ \"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\" ];\r\n      const month = months[new Date(str).getMonth()];\r\n      const day = parseInt(date[1], 10);\r\n\r\n      if (month === 'december') {\r\n          if (day < 22) {\r\n              zodiac_sign = 'Sagittarius';\r\n          } else {\r\n              zodiac_sign = 'Capricorn';\r\n          }\r\n      } else if (month === \"january\") {\r\n          if (day < 20) {\r\n              zodiac_sign = \"Capricorn\";\r\n          } else {\r\n              zodiac_sign = \"Aquarius\";\r\n          }\r\n      } else if (month === \"february\") {\r\n          if (day < 19) {\r\n              zodiac_sign = \"Aquarius\";\r\n          } else {\r\n              zodiac_sign = \"Pisces\";\r\n          }\r\n      } else if(month === \"march\") {\r\n          if (day < 21) {\r\n              zodiac_sign = \"Pisces\";\r\n          } else {\r\n              zodiac_sign = \"Aries\";\r\n          }\r\n      } else if (month === \"april\") {\r\n          if (day < 20) {\r\n              zodiac_sign = \"Aries\";\r\n          } else {\r\n              zodiac_sign = \"Taurus\";\r\n          }\r\n      } else if (month === \"may\") {\r\n          if (day < 21) {\r\n              zodiac_sign = \"Taurus\";\r\n          } else {\r\n              zodiac_sign = \"Gemini\";\r\n          }\r\n      } else if( month === \"june\") {\r\n          if (day < 21) {\r\n              zodiac_sign = \"Gemini\";\r\n          } else {\r\n              zodiac_sign = \"Cancer\";\r\n          }\r\n      } else if (month === \"july\") {\r\n          if (day < 23) {\r\n              zodiac_sign = \"Cancer\";\r\n          } else {\r\n              zodiac_sign = \"Leo\";\r\n          }\r\n      } else if( month === \"august\"){\r\n          if (day < 23) {\r\n              zodiac_sign = \"Leo\";\r\n          } else {\r\n              zodiac_sign = \"Virgo\";\r\n          }\r\n      } else if (month === \"september\"){\r\n          if (day < 23) {\r\n              zodiac_sign = \"Virgo\";\r\n          } else {\r\n              zodiac_sign = \"Libra\";\r\n          }\r\n      } else if (month === \"october\"){\r\n          if (day < 23) {\r\n              zodiac_sign = \"Libra\";\r\n          } else {\r\n              zodiac_sign = \"Scorpio\";\r\n          }\r\n      } else if (month === \"november\") {\r\n          if (day < 22) {\r\n              zodiac_sign = \"Scorpio\";\r\n          } else {\r\n              zodiac_sign = \"Sagittarius\";\r\n          }\r\n      }\r\n      return zodiac_sign;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n      const { person, persons, displayErrors } = this.state;\r\n      const listOfPersons = persons.map(person => {\r\n          if ( person.date !== '' && person.name !== '' && person.date !== '' ) {\r\n              return (\r\n                  <tr key={person.id}>\r\n                      <td>{person.name}</td>\r\n                      <td>{person.sign}</td>\r\n                      <td>{person.date}</td>\r\n                  </tr>\r\n              )\r\n          }\r\n      });\r\n\r\n    return (\r\n    <div>\r\n        <div className={styles.App}>\r\n            <h1>Zodiac Checker</h1>\r\n            <p>Enter Name and Birthday of a person</p>\r\n            <hr/>\r\n\r\n            <Form handleOnSubmit={this.onSubmit} persons={persons} displayErrors={displayErrors}/>\r\n\r\n            { person.id ? <TextResult currentPerson={person}/> : null }\r\n\r\n            <div\r\n                className={`${styles.resultWrapper}\r\n                            ${styles.fadein}\r\n                            ${listOfPersons.length > 0 ? styles.fadeinActive : \"\"}\r\n                            `}\r\n                            >\r\n                <Table listOfPersons={listOfPersons}/>\r\n                <PieChart persons={persons} />\r\n            </div>\r\n        </div>\r\n        <Footer />\r\n    </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}